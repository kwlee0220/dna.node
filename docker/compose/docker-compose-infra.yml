version: "3.0"
services:
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - zookeeper
      - kafka01
      - kafka02
      - kafka03
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka01:19091,kafka02:19092,kafka03:19093"
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: first
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://connect-fs:8083
      LOGGING_LEVEL_ROOT: warn
    networks:
      - dna_server_net
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:7.1.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVERS: "zookeeper:22888:23888"
    ports:
      - 2181:2181
    volumes:
      - ./zookeeper/data:/data
      - ./zookeeper/datalog:/datalogco
      - ./zookeeper/varlib/data:/var/lib/zookeeper/data
      - ./zookeeper/varlib/log:/var/lib/zookeeper/log
    networks:
      - dna_server_net
    restart: always

  kafka01:
    image: confluentinc/cp-kafka:7.1.2
    container_name: kafka01
    ports:
      - 9091:9091
#      - 9997:9997
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka01:19091,PLAINTEXT_HOST://localhost:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: true
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    volumes:
      - ./kafka01/kafka-logs:/tmp/kafka-logs
      - ./kafka01/data:/var/lib/kafka/data
    networks:
      - dna_server_net
    depends_on:
      - zookeeper
    restart: always

  kafka02:
    image: confluentinc/cp-kafka:7.1.2
    container_name: kafka02
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka02:19092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: true
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    volumes:
      - ./kafka02/kafka-logs:/tmp/kafka-logs
      - ./kafka02/data:/var/lib/kafka/data
    networks:
      - dna_server_net
    depends_on:
      - zookeeper
    restart: always

  kafka03:
    image: confluentinc/cp-kafka:7.1.2
    container_name: kafka03
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka03:19093,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: true
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    volumes:
      - ./kafka03/kafka-logs:/tmp/kafka-logs
      - ./kafka03/data:/var/lib/kafka/data
    networks:
      - dna_server_net
    depends_on:
      - zookeeper
    restart: always


  redis:
    image: 'redis:6.0.7'
    container_name: redis
    restart: always
    volumes:
      - redis_volume_data:/data
    ports:
      - 6379:6379


  postgres:
    container_name: postgres
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: dna
      POSTGRES_PASSWORD: urc2004
      POSTGRES_DB: dna
    ports:
      - "6432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - dna_server_net
    restart: always


networks:
  dna_server_net:
    external: true
    internal: true

volumes:
  pgdata:
  redis_volume_data: